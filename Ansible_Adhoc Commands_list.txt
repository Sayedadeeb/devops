############################# ANSIBLE ADHOC CMDS ##########################################


ADHOC COMMANDS
----------------

Important MODULES in ansible

1) command - This module is used for executing basic linux commands on managed nodes.
	$ ansible all  -m command -a 'free'
	
2) shell -  This module is used to execute commands which involved redirection and piping and to execute shell scripts on managed nodes.
	$ ansible  all  -m  shell -a 'ls -la > file2'
	
3) ping  --  This module is used to check if the remote server is pingable or not.
	
4) user --  This module is used for user management like create user, setting password, assign home directory  etc
	$ ansible  all -m user  -a  'name=anu  password=sunil'  -b  ( become , for higher privileges on managed nodes )
	$ ansible all -m user  -a 'name=Ravi password=freefree uid=1234 comment="A regular user"  home=/home/ubuntu/Ravi shell=/bin/bash' -b

5) copy  --  This module is used to copy the files and folders from controller to managed nodes
	$ ansible all -m  copy  -a 'src=/etc/passwd dest=/tmp'
	
	Copy module is used to change the ownership, group ownership and permissions of the files that are copied to managed nodes.
	$ ansible all -m  copy -a 'src=newfile1  dest=/home/ubuntu owner=root  group=root mode=760' -b
	
	To copy the file , by replacing the old content with new content
	$ ansible all -m  copy -a 'content="sunil\n"  dest=newfile1'  -b

6) fetch  --  This module is used to copy files and folder from managed nodes to controller
	$ ansible all  -m fetch  -a 'src=/etc/tomcat8/server.xml  dest=/tmp'  -b

7) file  --  This module is used for creating or deleting files and folders on managed nodes.
	$ ansible all  -m  file -a  'name=/tmp/file5  state=touch'
	$  ansible all  -m  file -a  'name=file1  state=touch owner=Anu group=Ravi  mode=700'  -b
		state=touch   is to create files
		state=directory  is to create directory
		state=absent  is for deleting file/directory
		
8) stat  --  Used to capture detailed information about files and folders present in managed nodes.

9) debug --  Used to display output of any module

10) apt   --  Used for performing package management on managed nodes ie installing softwares / upgrading repositories  etc . It works on ubuntu, debain flavours of linux. 
	$ ansible all -m apt  -a 'name=git  state=present' -b
		state=present  is for installation
		state=latest    for upgradation
		state=absent    for uninstallation
		
11) yum  --  similar to apt module. It works on Red hat linux, centos etc

12) git  --  used to perform git version controlling on managed nodes
	$ ansible all -m  git  -a  'repo=https://github.com/sunildevops77/repo1.git  dest=/tmp/mygit'  -b
	
13) replace -- This is used to replace specific text in configuration file with some other text.
	$  ansible all  -m replace  -a 'regexp=8080 replace=9090 path=/etc/tomcat8/server.xml'  -b

14) service  -- used for starting / stoping / restarting services on managed nodes.
	$  ansible all   -m service    -a 'name=tomcat8  state=restarted'  -b
		state=restarted is for restarting a service
		state=stopped  is for stopping a running service
		state=started  is for starting a stopped service

15) include  --  Used for calling child play books  from parent play book

16) uri    -- useful in checking  if remote url is reachable or not.
	$ ansible all -m   uri  -a 'url=http://facebook.com'
	In the output  ( green color )  status - 200
	Give a invalid url  ,  we get  status as -1

17) docker_container  --  used to execute docker  commands related to container management on managed nodes
18) docker_image  --  used to execute commands related to docker images on managed nodes.
19) docker_login  --  used to login to docker hub from managed nodes.
20) setup   --  used to capturing system information related to the managed nodes.



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


Syntx of adhoc commands
$ ansible  all/group_name/ipaddress -i  path_of_inventory_file -m modulename  -a  'arguments'

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


